{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3136,"databundleVersionId":26502,"sourceType":"competition"}],"dockerImageVersionId":30558,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"../input/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\ntrain_data = pd.read_csv(\"/kaggle/input/titanic/train.csv\")\ntrain_data.head()\n\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2023-11-09T06:38:18.001506Z","iopub.execute_input":"2023-11-09T06:38:18.001987Z","iopub.status.idle":"2023-11-09T06:38:18.041027Z","shell.execute_reply.started":"2023-11-09T06:38:18.001949Z","shell.execute_reply":"2023-11-09T06:38:18.039773Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_data = pd.read_csv(\"/kaggle/input/titanic/test.csv\")\ntest_data.head()","metadata":{"execution":{"iopub.status.busy":"2023-11-09T06:42:31.715625Z","iopub.execute_input":"2023-11-09T06:42:31.716131Z","iopub.status.idle":"2023-11-09T06:42:31.740364Z","shell.execute_reply.started":"2023-11-09T06:42:31.716094Z","shell.execute_reply":"2023-11-09T06:42:31.739139Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"women = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)/len(women)\n\nprint(\"% of women who survived:\", rate_women)","metadata":{"execution":{"iopub.status.busy":"2023-11-09T06:39:26.099028Z","iopub.execute_input":"2023-11-09T06:39:26.099644Z","iopub.status.idle":"2023-11-09T06:39:26.115882Z","shell.execute_reply.started":"2023-11-09T06:39:26.099593Z","shell.execute_reply":"2023-11-09T06:39:26.114391Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"men = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)/len(men)\n\nprint(\"% of men who survived:\", rate_men)","metadata":{"execution":{"iopub.status.busy":"2023-11-09T06:39:52.581137Z","iopub.execute_input":"2023-11-09T06:39:52.581567Z","iopub.status.idle":"2023-11-09T06:39:52.590474Z","shell.execute_reply.started":"2023-11-09T06:39:52.581533Z","shell.execute_reply":"2023-11-09T06:39:52.589330Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","metadata":{"execution":{"iopub.status.busy":"2023-11-09T06:40:17.507105Z","iopub.execute_input":"2023-11-09T06:40:17.507552Z","iopub.status.idle":"2023-11-09T06:40:18.951772Z","shell.execute_reply.started":"2023-11-09T06:40:17.507522Z","shell.execute_reply":"2023-11-09T06:40:18.950525Z"},"trusted":true},"execution_count":null,"outputs":[]}]}